{"version":3,"sources":["assets/icons/upload-image.svg","components-UI/Card/Card.js","components-UI/Divider/Divider.js","components/Instructions/Instructions.js","components/ImageSelectionAndSettings/UploadImage/UploadImage.js","components/ImageSelectionAndSettings/PreviewImage/PreviewImage.js","components-UI/Select/Select.js","components/ImageSelectionAndSettings/ImageSettings/ImageSettings.js","components/ImageSelectionAndSettings/ImageSelectionAndSettings.js","utils/deltaE.js","components/GeneratedPaletteAndColorbook/GeneratedPaletteAndColorbook.js","App.js","index.js"],"names":["module","exports","Card","children","className","Divider","Introduction","UploadImage","returnImageSrc","returnFileName","onDrop","useCallback","acceptedFiles","fileRejections","event","length","file","fileName","name","reader","FileReader","onload","result","target","readAsDataURL","useDropzone","maxFiles","maxSize","getRootProps","getInputProps","isDragActive","alt","src","uploadImage","PreviewImage","imageSrc","returnImgDimensions","clearImageData","useState","imageWidth","setImageWidth","imageHeight","setImageHeight","useEffect","img","Image","height","width","style","onClick","Select","selected","options","returnSelectedOption","selectedOption","setSelectedOption","listOpened","setListOpened","ref","useRef","callback","handleClick","e","current","contains","document","addEventListener","removeEventListener","useOutsideClick","key","map","option","ImageSettings","imageDimensions","returnSettings","undefined","pixelsWidth","setPixelsWidth","pixelsHeight","setpixelsHeight","ratio","setRatio","pixelizationLevel","setPixelizationLevel","squareSize","setSquareSize","paperSizes","paperSize","setPaperSize","maxColors","setMaxColors","Math","round","updateInput","value","toFixed","getMax","max","getMin","min","idealSquareForHeight","willIdealSquareForHeightFitToWidth","idealSquareForWidth","willIdealSquareForWidthFitToWHeight","roundedHeight","roundedWidth","type","onChange","ImageSelectionAndSettings","saveData","setImageSrc","setFileName","setImageDimensions","settings","setSettings","buttonClick","rgb2lab","rgb","x","y","z","r","g","b","pow","deltaE","rgbA","rgbB","labA","labB","deltaL","deltaA","deltaB","c1","sqrt","deltaC","deltaH","deltaLKlsl","deltaCkcsc","deltaHkhsh","i","GeneratedPaletteAndColorBook","data","pixelData","setPixelData","colorPalette","setColorPalette","shouldColor","setShouldColor","crossOrigin","canvas","createElement","canvasContext","getContext","drawImage","pixelArray","imgData","pixelCount","offset","pixels","push","createPixelArray","getImageData","cmap","quantize","quantizedPalette","palette","ralPalette","forEach","qColor","ralColor","allRalColors","reduce","bestColor","rColor","rColorObj","split","duplicatedRal","find","paletteObj","ral","newArray","original","join","splice","indexOf","generatedPalette","pixel","mappedArray","row","columns","ColorPalette","useMemo","color","display","margin","background","componentRef","generateSVG","domtoimage","toSvg","then","dataUrl","link","download","href","click","generateJPG","toJpeg","genreatePNG","toPng","checked","index","arr","prevRow","nextRow","column","center","top","bottom","left","right","columnData","Array","isArray","includes","isTopEq","isSameSquarePalette","isBotEq","isRightEq","isLeftEq","allBoxesAreEqual","fontSize","borderTop","createBorder","borderBottom","borderRight","borderLeft","whiteSpace","flexGrow","textAlign","overflow","code","box","isSideEqual","App","setData","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f1b82e5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/upload-image.aaf7c419.svg\";","import React from 'react';\nimport './Card.scss';\n\nconst Card = ({ children }) => <div className='card'>{children}</div>;\n\nexport default Card;\n","import React from 'react';\nimport './Divider.scss';\n\nconst Divider = () => <div className='divider' />;\n\nexport default Divider;\n","import React from 'react';\nimport './Instructions.scss';\n\nconst Introduction = () => {\n\treturn (\n\t\t<div className='instructions-wrapper'>\n\t\t\t<p>\n\t\t\t\tIf you are looking for a creative gift this is the place for you. Just upload any image\n\t\t\t\tof your choice and we will pixelate it, extract dominant colors and create a color by\n\t\t\t\tnumber for you. Right now, you can download the colorbook and palette as an image and\n\t\t\t\tprint it yourself, but our plan for the future is to provide a service where you just\n\t\t\t\torder the picture and we deliver it to you along with all the equipment needed.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tRight now, you can download the colorbook and palette as an image and print it yourself,\n\t\t\t\tbut our plan for the future is to provide a service where you just order the picture and\n\t\t\t\twe deliver it to you along with all the equipment needed.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tWe have a lot more in minds, but we first want to test the reviews this application\n\t\t\t\tgets. (We will be optimising the performance of course)\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default Introduction;\n","import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nimport uploadImage from '../../../assets/icons/upload-image.svg';\n\nimport './UploadImage.scss';\n\nconst UploadImage = ({ returnImageSrc, returnFileName }) => {\n\t// Recieve files with this callback\n\tconst onDrop = useCallback(\n\t\t(acceptedFiles, fileRejections, event) => {\n\t\t\t// todo handle errors\n\t\t\tif (fileRejections.length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!acceptedFiles.length) return;\n\n\t\t\tconst file = acceptedFiles[0];\n\n\t\t\tconst fileName = file.name;\n\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onload = ({ target: { result } }) => {\n\t\t\t\treturnImageSrc(result);\n\t\t\t\treturnFileName(fileName);\n\t\t\t};\n\t\t\treader.readAsDataURL(file);\n\t\t},\n\t\t[returnImageSrc, returnFileName]\n\t);\n\n\t// Input Hook\n\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({\n\t\tonDrop,\n\t\tmaxFiles: 1,\n\t\tmaxSize: 10 * 1024 * 1024,\n\t});\n\n\treturn (\n\t\t<div className='upload-wrapper'>\n\t\t\t<div\n\t\t\t\t{...getRootProps({\n\t\t\t\t\tclassName: !isDragActive ? 'upload-label' : 'upload-label active',\n\t\t\t\t})}>\n\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t<div className='text-div'>\n\t\t\t\t\t<img alt='upload' src={uploadImage} />\n\n\t\t\t\t\t<div className='bigger'> Drop image here</div>\n\t\t\t\t\t<div className='smaller'>or click here to select it from files</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default UploadImage;\n","import React, { useEffect, useState } from 'react';\nimport './PreviewImage.scss';\n\nconst PreviewImage = ({ imageSrc, fileName, returnImgDimensions, clearImageData }) => {\n\tconst [imageWidth, setImageWidth] = useState(100);\n\tconst [imageHeight, setImageHeight] = useState(100);\n\n\t// Calculate image dimensions\n\tuseEffect(() => {\n\t\tconst img = new Image();\n\t\timg.onload = () => {\n\t\t\tsetImageHeight(img.height);\n\t\t\tsetImageWidth(img.width);\n\n\t\t\treturnImgDimensions({ imageHeight: img.height, imageWidth: img.width });\n\t\t};\n\t\timg.src = imageSrc;\n\t\treturn () => {\n\t\t\tsetImageHeight(100);\n\t\t\tsetImageWidth(100);\n\t\t};\n\t}, [imageSrc, returnImgDimensions]);\n\n\treturn (\n\t\t<div className='preview-image'>\n\t\t\t{imageSrc && (\n\t\t\t\t<div className='image-wrapper'>\n\t\t\t\t\t<img\n\t\t\t\t\t\talt='display'\n\t\t\t\t\t\tsrc={imageSrc}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: imageWidth >= imageHeight ? '60%' : 'auto',\n\t\t\t\t\t\t\theight: imageHeight > imageWidth ? '60%' : 'auto',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className='file-name' onClick={clearImageData}>\n\t\t\t\t{fileName && fileName}\n\t\t\t</div>\n\t\t\t<div className='dimensions'>\n\t\t\t\t{imageWidth && imageHeight && `${imageWidth} x ${imageHeight}`}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PreviewImage;\n","import React, { useState, useEffect, useRef } from 'react';\nimport './Select.scss';\n\nconst useOutsideClick = (ref, callback) => {\n\tconst handleClick = e => {\n\t\tif (ref.current && !ref.current.contains(e.target)) {\n\t\t\tcallback();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', handleClick);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', handleClick);\n\t\t};\n\t});\n};\n\nconst Select = ({ selected, options, returnSelectedOption }) => {\n\tconst [selectedOption, setSelectedOption] = useState(selected);\n\tconst [listOpened, setListOpened] = useState(false);\n\n\tconst ref = useRef();\n\n\tuseOutsideClick(ref, () => {\n\t\tif (listOpened) setListOpened(false);\n\t});\n\n\tuseEffect(() => {\n\t\treturnSelectedOption(selectedOption);\n\t}, [selectedOption, returnSelectedOption]);\n\n\treturn (\n\t\t<div className='select'>\n\t\t\t<div>\n\t\t\t\t<div\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetListOpened(true);\n\t\t\t\t\t}}\n\t\t\t\t\tclassName='box'>\n\t\t\t\t\t{selectedOption.key}\n\t\t\t\t</div>\n\t\t\t\t<div className='value'>{`${selectedOption.width} x ${selectedOption.height}`}</div>\n\t\t\t\t<div className='unit'>MM</div>\n\t\t\t</div>\n\t\t\t{listOpened && (\n\t\t\t\t<>\n\t\t\t\t\t<div className='options-list-arrow' />\n\t\t\t\t\t<div className='options-list' ref={ref}>\n\t\t\t\t\t\t<div className='options-title'>Paper Sizes</div>\n\t\t\t\t\t\t{options.map(option => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\toption.key === selectedOption.key ? 'option selected' : 'option'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tkey={option.key}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetSelectedOption(option);\n\t\t\t\t\t\t\t\t\t\tsetListOpened(false);\n\t\t\t\t\t\t\t\t\t}}>{`${option.key} - ${option.width} x ${option.height} mm`}</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Select;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport './ImageSettings.scss';\nimport SelectPaper from '../../../components-UI/Select/Select';\nimport paperSizes from '../../../assets/data/paperSizes.json';\n\nconst ImageSettings = ({ imageDimensions: { imageWidth, imageHeight }, returnSettings }) => {\n\tconst [pixelsWidth, setPixelsWidth] = useState(undefined);\n\tconst [pixelsHeight, setpixelsHeight] = useState(undefined);\n\tconst [ratio, setRatio] = useState(1);\n\tconst [pixelizationLevel, setPixelizationLevel] = useState(5);\n\t// const [whitespace, setWhitespace] = useState(21); //todo whitespace\n\tconst [squareSize, setSquareSize] = useState(10);\n\tconst [paperSize, setPaperSize] = useState(paperSizes[4]);\n\tconst [maxColors, setMaxColors] = useState(15);\n\n\tuseEffect(() => {\n\t\tif (imageHeight && imageWidth && pixelizationLevel) {\n\t\t\tsetpixelsHeight(Math.round(imageHeight / pixelizationLevel));\n\t\t\tsetPixelsWidth(Math.round(imageWidth / pixelizationLevel));\n\t\t\tconst ratio = imageHeight / imageWidth;\n\t\t\tsetRatio(ratio);\n\t\t}\n\t}, [imageHeight, imageWidth, pixelizationLevel]);\n\n\tconst updateInput = useCallback(\n\t\t({ target }) => {\n\t\t\tswitch (target.name) {\n\t\t\t\tcase 'widthInput':\n\t\t\t\t\tsetPixelsWidth(target.value);\n\t\t\t\t\tsetpixelsHeight(Math.round(target.value * ratio));\n\t\t\t\t\tsetPixelizationLevel((imageWidth / target.value).toFixed(2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'heightInput':\n\t\t\t\t\tsetpixelsHeight(target.value);\n\t\t\t\t\tsetPixelsWidth(Math.round(target.value / ratio));\n\t\t\t\t\tsetPixelizationLevel((imageHeight / target.value).toFixed(2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'pixelizationLevelInput':\n\t\t\t\t\tsetpixelsHeight(Math.round(imageHeight / target.value));\n\t\t\t\t\tsetPixelsWidth(Math.round(imageWidth / target.value));\n\t\t\t\t\tsetPixelizationLevel(target.value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'maxColors':\n\t\t\t\t\tsetMaxColors(target.value);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\t[ratio, imageHeight, imageWidth]\n\t);\n\n\tuseEffect(() => {\n\t\tconst getMax = Math.max(pixelsWidth, pixelsHeight);\n\t\tconst getMin = Math.min(pixelsWidth, pixelsHeight);\n\n\t\tconst idealSquareForHeight = paperSize.height / getMax;\n\t\tconst willIdealSquareForHeightFitToWidth = idealSquareForHeight * getMin < paperSize.width;\n\n\t\tconst idealSquareForWidth = paperSize.width / getMin;\n\t\tconst willIdealSquareForWidthFitToWHeight = idealSquareForWidth * getMax < paperSize.height;\n\n\t\tconst roundedHeight = Math.round(idealSquareForHeight * 10) / 10;\n\t\tconst roundedWidth = Math.round(idealSquareForWidth * 10) / 10;\n\n\t\twillIdealSquareForHeightFitToWidth && setSquareSize(roundedHeight);\n\t\twillIdealSquareForWidthFitToWHeight && setSquareSize(roundedWidth);\n\t}, [pixelsHeight, pixelsWidth, paperSize, squareSize]);\n\n\tuseEffect(() => {\n\t\treturnSettings({\n\t\t\theight: pixelsHeight,\n\t\t\twidth: pixelsWidth,\n\t\t\tpaperSize: paperSize,\n\t\t\tmaxColors: maxColors,\n\t\t\tsquareSize: squareSize,\n\t\t});\n\t}, [pixelsHeight, pixelsWidth, paperSize, squareSize, maxColors, returnSettings]);\n\treturn (\n\t\t<div className='settings-column'>\n\t\t\t<div className='section-title'>Color book difficulty</div>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='dimensions'>\n\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t<div className='col-title'></div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname='widthInput'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tvalue={pixelsWidth}\n\t\t\t\t\t\t\tonChange={updateInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='col-title'>WIDTH</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='x'>x</div>\n\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname='heightInput'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tvalue={pixelsHeight}\n\t\t\t\t\t\t\tonChange={updateInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='col-title'>HEIGHT</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tname='pixelizationLevelInput'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tvalue={pixelizationLevel}\n\t\t\t\t\t\tonChange={updateInput}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='col-title'>PIXELIZATION LEVEL</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='section-title'>Paper size</div>\n\t\t\t<div className='row'>\n\t\t\t\t<SelectPaper\n\t\t\t\t\tselected={paperSize}\n\t\t\t\t\toptions={paperSizes}\n\t\t\t\t\treturnSelectedOption={setPaperSize}\n\t\t\t\t/>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<div className='col-title'>SQUARE SIZE</div>\n\t\t\t\t\t<div>{squareSize}</div>\n\t\t\t\t\t<div className='col-title'>MM</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<div className='col-title'>WHITEPSACE</div>\n\t\t\t\t\t<div>TBD</div>\n\t\t\t\t\t<div className='col-title'>MM</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='section-title'>Color Palette Settings</div>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<div className='col-title'>MAX COLORS</div>\n\t\t\t\t\t<input name='maxColors' type='number' onChange={updateInput} value={maxColors} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ImageSettings;\n","import React, { useState, useCallback } from 'react';\nimport './ImageSelectionAndSettings.scss';\nimport UploadImage from './UploadImage/UploadImage';\nimport PreviewImage from './PreviewImage/PreviewImage';\nimport ImageSettings from './ImageSettings/ImageSettings';\n\nconst ImageSelectionAndSettings = ({ saveData }) => {\n\tconst [imageSrc, setImageSrc] = useState(null);\n\tconst [fileName, setFileName] = useState(null);\n\tconst [imageDimensions, setImageDimensions] = useState({});\n\tconst [settings, setSettings] = useState({});\n\n\tconst clearImageData = useCallback(() => {\n\t\tsetImageSrc(null);\n\t}, []);\n\n\tconst buttonClick = useCallback(() => {\n\t\tsaveData({\n\t\t\timageSrc: imageSrc,\n\t\t\tfileName: fileName,\n\t\t\timageDimensions: imageDimensions,\n\t\t\tsettings: settings,\n\t\t});\n\t}, [imageSrc, fileName, imageDimensions, settings, saveData]);\n\n\treturn (\n\t\t<>\n\t\t\t<div className='img-upload-title '>Image upload and settings</div>\n\t\t\t<div className='img-settings-and-upload-wrapper'>\n\t\t\t\t{(!imageSrc && (\n\t\t\t\t\t<UploadImage returnImageSrc={setImageSrc} returnFileName={setFileName} />\n\t\t\t\t)) || (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ImageSettings imageDimensions={imageDimensions} returnSettings={setSettings} />\n\t\t\t\t\t\t<PreviewImage\n\t\t\t\t\t\t\timageSrc={imageSrc}\n\t\t\t\t\t\t\tfileName={fileName}\n\t\t\t\t\t\t\treturnImgDimensions={setImageDimensions}\n\t\t\t\t\t\t\tclearImageData={clearImageData}\n\t\t\t\t\t\t\treturnSettings={setSettings}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className='img-settings-generate-button'>\n\t\t\t\t<button onClick={buttonClick}>Generate Pixels</button>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ImageSelectionAndSettings;\n","// Convert RGB to LAB.\nexport function rgb2lab(rgb) {\n\tlet r = rgb[0] / 255,\n\t\tg = rgb[1] / 255,\n\t\tb = rgb[2] / 255,\n\t\tx,\n\t\ty,\n\t\tz;\n\tr = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n\tg = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n\tb = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\tx = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n\ty = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0;\n\tz = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n\treturn [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n}\n\n/**\n * @param {Array} rgbA array of 3 numbers (rgb)\n * @param {Array} rgbB array of 3 numbers (rgb)\n *\n * Calculates the difference between 2 colors.\n *\n * Returns a number between 0 and 100\n * 0-3 = difference is barely visible to human eye\n * 3-5 = difference is visible when focusing too much\n * 4-10 = difference is noticable but not distrubing\n * 10-15 = difference is noticable\n * 15> = difference is disturbingly noticable\n * 100 = opposite color\n */\nexport function deltaE(rgbA, rgbB) {\n\tlet labA = rgb2lab(rgbA);\n\tlet labB = rgb2lab(rgbB);\n\tlet deltaL = labA[0] - labB[0];\n\tlet deltaA = labA[1] - labB[1];\n\tlet deltaB = labA[2] - labB[2];\n\tlet c1 = Math.sqrt(labA[1] * labA[1] + labA[2] * labA[2]);\n\tlet c2 = Math.sqrt(labB[1] * labB[1] + labB[2] * labB[2]);\n\tlet deltaC = c1 - c2;\n\tlet deltaH = deltaA * deltaA + deltaB * deltaB - deltaC * deltaC;\n\tdeltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\n\tlet sc = 1.0 + 0.045 * c1;\n\tlet sh = 1.0 + 0.015 * c1;\n\tlet deltaLKlsl = deltaL / 1.0;\n\tlet deltaCkcsc = deltaC / sc;\n\tlet deltaHkhsh = deltaH / sh;\n\tlet i = deltaLKlsl * deltaLKlsl + deltaCkcsc * deltaCkcsc + deltaHkhsh * deltaHkhsh;\n\treturn i < 0 ? 0 : Math.sqrt(i);\n}\n","import React, { useEffect, useState, useMemo, useRef, useCallback } from 'react';\nimport domtoimage from 'dom-to-image-more';\nimport quantize from 'quantize';\nimport { deltaE } from '../../utils/deltaE';\nimport allRalColors from '../../assets/data/palette.json';\nimport './GeneratedPaletteAndColorbook.scss';\n\nconst GeneratedPaletteAndColorBook = ({ data }) => {\n\tconst [pixelData, setPixelData] = useState([]);\n\tconst [colorPalette, setColorPalette] = useState([]);\n\tconst [shouldColor, setShouldColor] = useState(false);\n\tconst { width, height, maxColors, squareSize } = data.settings;\n\n\tuseEffect(() => {\n\t\tif (width && height && maxColors && squareSize) {\n\t\t\tsetPixelData([]);\n\t\t\tsetColorPalette([]);\n\t\t\tlet img = new Image();\n\t\t\timg.crossOrigin = 'anonymous';\n\t\t\timg.onload = () => {\n\t\t\t\t// Round dimensions to the nearest integers for accurate result.\n\t\t\t\tconst roundedHeight = Math.round(height);\n\t\t\t\tconst roundedWidth = Math.round(width);\n\n\t\t\t\tconst canvas = document.createElement('canvas');\n\n\t\t\t\t// Setup canvas dimensions.\n\t\t\t\tcanvas.width = roundedWidth;\n\t\t\t\tcanvas.height = roundedHeight;\n\n\t\t\t\t// Draw image to the canvas in the size of the rounded width.\n\t\t\t\tconst canvasContext = canvas.getContext('2d');\n\t\t\t\tcanvasContext.drawImage(img, 0, 0, roundedWidth, roundedHeight);\n\n\t\t\t\t// Get drawn image data.\n\t\t\t\tconst imageData = canvasContext.getImageData(0, 0, roundedWidth, roundedHeight);\n\t\t\t\tconst imagePixels = imageData.data;\n\t\t\t\tconst imagePixelCount = roundedWidth * roundedHeight;\n\n\t\t\t\t// Create pixls array of the whole image.\n\t\t\t\tconst pixelArray = createPixelArray(imagePixels, imagePixelCount);\n\n\t\t\t\t// Get map of quantized colors.\n\t\t\t\tconst cmap = quantize(pixelArray, maxColors);\n\t\t\t\tconst quantizedPalette = cmap.palette();\n\n\t\t\t\t// Generated Ral Palette\n\t\t\t\tconst ralPalette = [];\n\t\t\t\tquantizedPalette.forEach(qColor => {\n\t\t\t\t\t// Find the closest ral color for this quantized color.\n\t\t\t\t\tconst { ralColor } = allRalColors.reduce((bestColor, rColor) => {\n\t\t\t\t\t\tconst rColorObj = {\n\t\t\t\t\t\t\tdeltaE: deltaE(qColor, rColor.rgb.split(',')),\n\t\t\t\t\t\t\tralColor: rColor,\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn bestColor &&\n\t\t\t\t\t\t\tMath.min(bestColor.deltaE, rColorObj.deltaE) === bestColor.deltaE\n\t\t\t\t\t\t\t? bestColor\n\t\t\t\t\t\t\t: rColorObj || rColorObj;\n\t\t\t\t\t});\n\n\t\t\t\t\t// Find duplicated color in ral\n\t\t\t\t\tconst duplicatedRal = ralPalette.find(\n\t\t\t\t\t\tpaletteObj => paletteObj.ral.ral === ralColor.ral\n\t\t\t\t\t);\n\n\t\t\t\t\t// If there is not an element already inside the palette, add it.\n\t\t\t\t\tif (!duplicatedRal) {\n\t\t\t\t\t\tralPalette.push({\n\t\t\t\t\t\t\toriginal: qColor.join(','),\n\t\t\t\t\t\t\tral: ralColor,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// There is already an element here, meaning we have a different RGB value. So we replace the string with array of two strings.\n\t\t\t\t\t\tconst newArray =\n\t\t\t\t\t\t\ttypeof duplicatedRal.original === 'string'\n\t\t\t\t\t\t\t\t? [duplicatedRal.original, qColor.join(',')]\n\t\t\t\t\t\t\t\t: [...duplicatedRal.original, qColor.join(',')];\n\t\t\t\t\t\tralPalette.splice(ralPalette.indexOf(duplicatedRal), 1, {\n\t\t\t\t\t\t\toriginal: newArray,\n\t\t\t\t\t\t\tral: ralColor,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Find all the pixels's nearest quantized colors.\n\t\t\t\tconst generatedPalette = [];\n\t\t\t\tpixelArray.forEach(pixel => {\n\t\t\t\t\tgeneratedPalette.push(cmap.map(pixel));\n\t\t\t\t});\n\n\t\t\t\t// Transform the generatedPalette of pixels into array of arrays for easier rendering.\n\t\t\t\tlet i = 0;\n\t\t\t\tconst mappedArray = [];\n\t\t\t\twhile (generatedPalette.length) {\n\t\t\t\t\tmappedArray.push({\n\t\t\t\t\t\trow: i,\n\t\t\t\t\t\tcolumns: generatedPalette.splice(0, roundedWidth),\n\t\t\t\t\t});\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tsetPixelData(mappedArray);\n\t\t\t\tsetColorPalette(ralPalette);\n\t\t\t\timg = null;\n\t\t\t};\n\t\t\timg.src = data.imageSrc;\n\t\t}\n\t}, [height, width, maxColors, data.imageSrc, squareSize]);\n\n\tconst ColorPalette = useMemo(() => {\n\t\treturn (\n\t\t\tcolorPalette &&\n\t\t\tcolorPalette.length > 0 && (\n\t\t\t\t<div className='color-palette'>\n\t\t\t\t\t{colorPalette.map(color => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={color.ral.ral}\n\t\t\t\t\t\t\t\tclassName='color-block'\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\t\t\t\theight: '50px',\n\t\t\t\t\t\t\t\t\twidth: '50px',\n\t\t\t\t\t\t\t\t\tmargin: '10px',\n\t\t\t\t\t\t\t\t\tbackground: `rgb(${color.ral.rgb})`,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t)\n\t\t);\n\t}, [colorPalette]);\n\n\tconst componentRef = useRef();\n\n\tconst generateSVG = useCallback(() => {\n\t\tdomtoimage.toSvg(componentRef.current).then(function (dataUrl) {\n\t\t\tconst link = document.createElement('a');\n\t\t\tlink.download = 'my-image-name.svg';\n\t\t\tlink.href = dataUrl;\n\t\t\tlink.click();\n\t\t});\n\t}, [componentRef]);\n\n\tconst generateJPG = useCallback(() => {\n\t\tdomtoimage.toJpeg(componentRef.current).then(function (dataUrl) {\n\t\t\tconst link = document.createElement('a');\n\t\t\tlink.download = 'my-image-name.jpeg';\n\t\t\tlink.href = dataUrl;\n\t\t\tlink.click();\n\t\t});\n\t}, [componentRef]);\n\n\tconst genreatePNG = useCallback(() => {\n\t\tdomtoimage.toPng(componentRef.current).then(function (dataUrl) {\n\t\t\tconst link = document.createElement('a');\n\t\t\tlink.download = 'my-image-name.png';\n\t\t\tlink.href = dataUrl;\n\t\t\tlink.click();\n\t\t});\n\t}, [componentRef]);\n\n\treturn (\n\t\t<div className='result-row'>\n\t\t\t<div>\n\t\t\t\t{ColorPalette}\n\t\t\t\tColors generated {colorPalette && colorPalette.length}\n\t\t\t\t<div>\n\t\t\t\t\t{shouldColor ? 'Showing \"result\"' : 'Showing blank'}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\tchecked={shouldColor}\n\t\t\t\t\t\tonChange={() => setShouldColor(!shouldColor)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={() => generateSVG(componentRef)}>Download SVG</button>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={() => generateJPG(componentRef)}>Download JPG</button>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={() => genreatePNG(componentRef)}>Download PNG</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='box'>\n\t\t\t\t<div className='colorbook' ref={componentRef}>\n\t\t\t\t\t{pixelData &&\n\t\t\t\t\t\tsquareSize &&\n\t\t\t\t\t\tcolorPalette &&\n\t\t\t\t\t\tpixelData.map((row, index, arr) => {\n\t\t\t\t\t\t\tconst prevRow = (index !== 0 && pixelData[index - 1]) || null;\n\t\t\t\t\t\t\tconst nextRow = (index + 1 !== arr.length && pixelData[index + 1]) || null;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={row.row}\n\t\t\t\t\t\t\t\t\tclassName='colorbook-row'\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: `${row.columns.length * squareSize}mm`,\n\t\t\t\t\t\t\t\t\t\theight: `${squareSize}mm`,\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{row.columns.map((column, index, arr) => {\n\t\t\t\t\t\t\t\t\t\tconst { top, bottom, left, right, center } = {\n\t\t\t\t\t\t\t\t\t\t\tcenter: column.join(','),\n\t\t\t\t\t\t\t\t\t\t\ttop: prevRow && prevRow.columns[index].join(','),\n\t\t\t\t\t\t\t\t\t\t\tbottom: nextRow && nextRow.columns[index].join(','),\n\t\t\t\t\t\t\t\t\t\t\tleft: (index !== 0 && row.columns[index - 1].join(',')) || null,\n\t\t\t\t\t\t\t\t\t\t\tright:\n\t\t\t\t\t\t\t\t\t\t\t\t(index + 1 !== arr.length &&\n\t\t\t\t\t\t\t\t\t\t\t\t\trow.columns[index + 1].join(',')) ||\n\t\t\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\tconst columnData =\n\t\t\t\t\t\t\t\t\t\t\t(colorPalette &&\n\t\t\t\t\t\t\t\t\t\t\t\tcolorPalette.length > 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\tcolorPalette.find(color => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (!Array.isArray(color.original)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn color.original === center;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn color.original.includes(center);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t})) ||\n\t\t\t\t\t\t\t\t\t\t\tnull;\n\n\t\t\t\t\t\t\t\t\t\tconst isTopEq =\n\t\t\t\t\t\t\t\t\t\t\tcolumnData && isSameSquarePalette(top, columnData.original);\n\t\t\t\t\t\t\t\t\t\tconst isBotEq =\n\t\t\t\t\t\t\t\t\t\t\tcolumnData && isSameSquarePalette(bottom, columnData.original);\n\t\t\t\t\t\t\t\t\t\tconst isRightEq =\n\t\t\t\t\t\t\t\t\t\t\tcolumnData && isSameSquarePalette(right, columnData.original);\n\t\t\t\t\t\t\t\t\t\tconst isLeftEq =\n\t\t\t\t\t\t\t\t\t\t\tcolumnData && isSameSquarePalette(left, columnData.original);\n\n\t\t\t\t\t\t\t\t\t\tconst allBoxesAreEqual = isTopEq && isRightEq && isLeftEq && isBotEq;\n\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tkey={row.row + index}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='colorbook-column'\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `${squareSize * 2}px`,\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderTop: !shouldColor && createBorder(isTopEq),\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderBottom: !shouldColor && createBorder(isBotEq),\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderRight: !shouldColor && createBorder(isRightEq),\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderLeft: !shouldColor && createBorder(isLeftEq),\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: shouldColor\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? columnData &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  columnData.ral &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  columnData.ral.rgb &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  `rgb(${columnData.ral.rgb})`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'white',\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\t\t\t\t\t\t\t\twhiteSpace: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgb(0,0,0,0.8)',\n\t\t\t\t\t\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t{!shouldColor &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t!allBoxesAreEqual &&\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnData &&\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnData.ral &&\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnData.ral.code}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default GeneratedPaletteAndColorBook;\n\nfunction createPixelArray(imgData, pixelCount) {\n\tconst pixels = imgData;\n\tconst pixelArray = [];\n\tfor (let i = 0, offset, r, g, b; i < pixelCount; i++) {\n\t\toffset = i * 4;\n\t\tr = pixels[offset + 0];\n\t\tg = pixels[offset + 1];\n\t\tb = pixels[offset + 2];\n\n\t\tpixelArray.push([r, g, b, 255]);\n\t}\n\treturn pixelArray;\n}\n\nfunction isSameSquarePalette(box, original) {\n\tif (!original || !box) return false;\n\tif (typeof original === 'string') {\n\t\treturn original === box;\n\t} else if (Array.isArray(original)) {\n\t\treturn original.includes(box);\n\t} else return false;\n}\n\nconst createBorder = isSideEqual => `0.2px solid ${isSideEqual ? '#FFFFFF' : '#5D5D5D'}`;\n","import React, { useState } from 'react';\nimport './sass/global.scss';\nimport { Card, Divider } from './components-UI';\nimport {\n\tInstructions,\n\tImageSelectionAndSettings,\n\tGeneratedPaletteAndColorBook,\n} from './components';\n\nfunction App() {\n\tconst [data, setData] = useState(null);\n\n\treturn (\n\t\t<div className='body-background'>\n\t\t\t<Card>\n\t\t\t\t<h1 className='title'>Create pixel art from any image</h1>\n\t\t\t\t<Instructions></Instructions>\n\t\t\t\t<Divider />\n\t\t\t\t<ImageSelectionAndSettings saveData={setData} />\n\t\t\t\t<Divider />\n\t\t\t\t{data && <GeneratedPaletteAndColorBook data={data} />}\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}