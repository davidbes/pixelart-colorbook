{"version":3,"sources":["assets/icons/upload-image.svg","components-UI/Card/Card.js","components-UI/Divider/Divider.js","components/Instructions/Instructions.js","components-UI/Select/Select.js","components/ImageSelectionAndSettings/ImageSettings/ImageSettings.js","components/ImageSelectionAndSettings/PreviewImage/PreviewImage.js","components/ImageSelectionAndSettings/UploadImage/UploadImage.js","utils/deltaE.js","components/ImageSelectionAndSettings/ImageSelectionAndSettings.js","utils/createPixelArray.js","components/GeneratedPaletteAndColorbook/ToggleColor.js","components/GeneratedPaletteAndColorbook/Colorbook.js","components/GeneratedPaletteAndColorbook/Palette.js","components/GeneratedPaletteAndColorbook/DownloadImage.js","components/GeneratedPaletteAndColorbook/GeneratedPaletteAndColorbook.js","App.js","index.js"],"names":["module","exports","Card","children","className","Divider","Introduction","Select","selected","options","returnSelectedOption","useState","selectedOption","setSelectedOption","listOpened","setListOpened","ref","useRef","callback","handleClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","useOutsideClick","onClick","key","width","height","map","option","ImageSettings","imageDimensions","imageWidth","imageHeight","returnSettings","undefined","pixelsWidth","setPixelsWidth","pixelsHeight","setpixelsHeight","ratio","setRatio","pixelizationLevel","setPixelizationLevel","squareSize","setSquareSize","paperSizes","paperSize","setPaperSize","maxColors","setMaxColors","Math","round","updateInput","useCallback","name","value","toFixed","getMax","max","getMin","min","idealSquareForHeight","willIdealSquareForHeightFitToWidth","idealSquareForWidth","willIdealSquareForWidthFitToWHeight","roundedHeight","roundedWidth","type","onChange","PreviewImage","imageSrc","fileName","returnImgDimensions","clearImageData","setImageWidth","setImageHeight","img","Image","onload","src","alt","style","UploadImage","returnImageSrc","returnFileName","onDrop","acceptedFiles","fileRejections","event","length","file","reader","FileReader","result","readAsDataURL","useDropzone","maxFiles","maxSize","getRootProps","getInputProps","isDragActive","uploadImage","rgb2lab","rgb","x","y","z","r","g","b","pow","deltaE","rgbA","rgbB","labA","labB","deltaL","deltaA","deltaB","c1","sqrt","deltaC","deltaH","deltaLKlsl","deltaCkcsc","deltaHkhsh","i","ImageSelectionAndSettings","saveData","setImageSrc","setFileName","setImageDimensions","settings","setSettings","buttonClick","crossOrigin","canvas","createElement","canvasContext","getContext","drawImage","pixelArray","imgData","pixelCount","offset","pixels","push","createPixelArray","getImageData","data","cmap","quantize","quantizedPalette","palette","ralPalette","forEach","qColor","ralColor","allRalColors","reduce","bestColor","rColor","rColorObj","split","duplicatedRal","find","paletteObj","ral","newArray","original","join","splice","indexOf","generatedPalette","pixel","mappedArray","row","columns","ToggleColor","toggle","updateToggle","ToggleButton","toggled","styled","div","props","Row","rowWidth","rowHeight","Box","textColor","fontSize","backgroundColor","border","top","right","bottom","left","ColorbookContainer","Colorbook","shouldColor","sendRef","colorbookRef","createBorder","isSideEqual","isSameSquarePalette","box","Array","isArray","includes","index","arr","prevRow","nextRow","column","center","columnData","color","isTopEq","isBotEq","isRightEq","isLeftEq","allBoxesAreEqual","code","PaletteDiv","ColorDiv","codeColor","Palette","sortedPalette","setSortedPalette","paletteRef","sort","colA","colB","Color","rgbArray","DownlaodImage","isLoading","setIsLoading","setDownloadStart","a","slicedFileName","slice","domtoimage","toJpeg","colorbookDataURL","link","download","href","click","bgcolor","paletteDataURL","palLink","ButtonWrapper","GeneratedColorbookAndPalette","setColorbookRef","setPaletteRef","setShouldColor","Grid","DownloadImage","App","setData","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f41b2ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/upload-image.aaf7c419.svg\";","import React from 'react';\nimport './Card.scss';\n\nconst Card = ({ children }) => <div className='card'>{children}</div>;\n\nexport default Card;\n","import React from 'react';\nimport './Divider.scss';\n\nconst Divider = () => <div className='divider' />;\n\nexport default Divider;\n","import React from 'react';\nimport './Instructions.scss';\n\nconst Introduction = () => {\n\treturn (\n\t\t<div className='instructions-wrapper'>\n\t\t\t<p>\n\t\t\t\tIf you are looking for a creative gift this is the place for you. Just upload any image\n\t\t\t\tof your choice and we will pixelate it, extract dominant colors and create a color by\n\t\t\t\tnumber for you. Right now, you can download the colorbook and palette as an image and\n\t\t\t\tprint it yourself, but our plan for the future is to provide a service where you just\n\t\t\t\torder the picture and we deliver it to you along with all the equipment needed.\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default Introduction;\n","import React, { useState, useEffect, useRef } from 'react';\nimport './Select.scss';\n\nconst useOutsideClick = (ref, callback) => {\n\tconst handleClick = e => {\n\t\tif (ref.current && !ref.current.contains(e.target)) {\n\t\t\tcallback();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', handleClick);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', handleClick);\n\t\t};\n\t});\n};\n\nconst Select = ({ selected, options, returnSelectedOption }) => {\n\tconst [selectedOption, setSelectedOption] = useState(selected);\n\tconst [listOpened, setListOpened] = useState(false);\n\n\tconst ref = useRef();\n\n\tuseOutsideClick(ref, () => {\n\t\tif (listOpened) setListOpened(false);\n\t});\n\n\tuseEffect(() => {\n\t\treturnSelectedOption(selectedOption);\n\t}, [selectedOption, returnSelectedOption]);\n\n\treturn (\n\t\t<div className='select'>\n\t\t\t<div>\n\t\t\t\t<div\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetListOpened(true);\n\t\t\t\t\t}}\n\t\t\t\t\tclassName='box'>\n\t\t\t\t\t{selectedOption.key}\n\t\t\t\t</div>\n\t\t\t\t<div className='value'>{`${selectedOption.width} x ${selectedOption.height}`}</div>\n\t\t\t\t<div className='unit'>MM</div>\n\t\t\t</div>\n\t\t\t{listOpened && (\n\t\t\t\t<>\n\t\t\t\t\t<div className='options-list-arrow' />\n\t\t\t\t\t<div className='options-list' ref={ref}>\n\t\t\t\t\t\t<div className='options-title'>Paper Sizes</div>\n\t\t\t\t\t\t{options.map(option => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\toption.key === selectedOption.key ? 'option selected' : 'option'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tkey={option.key}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetSelectedOption(option);\n\t\t\t\t\t\t\t\t\t\tsetListOpened(false);\n\t\t\t\t\t\t\t\t\t}}>{`${option.key} - ${option.width} x ${option.height} mm`}</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Select;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport './ImageSettings.scss';\nimport SelectPaper from '../../../components-UI/Select/Select';\nimport paperSizes from '../../../assets/data/paperSizes.json';\n\nconst ImageSettings = ({ imageDimensions: { imageWidth, imageHeight }, returnSettings }) => {\n\tconst [pixelsWidth, setPixelsWidth] = useState(undefined);\n\tconst [pixelsHeight, setpixelsHeight] = useState(undefined);\n\tconst [ratio, setRatio] = useState(1);\n\tconst [pixelizationLevel, setPixelizationLevel] = useState(5);\n\t// const [whitespace, setWhitespace] = useState(21); //todo whitespace\n\tconst [squareSize, setSquareSize] = useState(10);\n\tconst [paperSize, setPaperSize] = useState(paperSizes[4]);\n\tconst [maxColors, setMaxColors] = useState(15);\n\n\tuseEffect(() => {\n\t\tif (imageHeight && imageWidth && pixelizationLevel) {\n\t\t\tsetpixelsHeight(Math.round(imageHeight / pixelizationLevel));\n\t\t\tsetPixelsWidth(Math.round(imageWidth / pixelizationLevel));\n\t\t\tconst ratio = imageHeight / imageWidth;\n\t\t\tsetRatio(ratio);\n\t\t}\n\t}, [imageHeight, imageWidth, pixelizationLevel]);\n\n\tconst updateInput = useCallback(\n\t\t({ target }) => {\n\t\t\tswitch (target.name) {\n\t\t\t\tcase 'widthInput':\n\t\t\t\t\tsetPixelsWidth(target.value);\n\t\t\t\t\tsetpixelsHeight(Math.round(target.value * ratio));\n\t\t\t\t\tsetPixelizationLevel((imageWidth / target.value).toFixed(2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'heightInput':\n\t\t\t\t\tsetpixelsHeight(target.value);\n\t\t\t\t\tsetPixelsWidth(Math.round(target.value / ratio));\n\t\t\t\t\tsetPixelizationLevel((imageHeight / target.value).toFixed(2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'pixelizationLevelInput':\n\t\t\t\t\tsetpixelsHeight(Math.round(imageHeight / target.value));\n\t\t\t\t\tsetPixelsWidth(Math.round(imageWidth / target.value));\n\t\t\t\t\tsetPixelizationLevel(target.value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'maxColors':\n\t\t\t\t\tsetMaxColors(target.value);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\t[ratio, imageHeight, imageWidth]\n\t);\n\n\tuseEffect(() => {\n\t\tconst getMax = Math.max(pixelsWidth, pixelsHeight);\n\t\tconst getMin = Math.min(pixelsWidth, pixelsHeight);\n\n\t\tconst idealSquareForHeight = paperSize.height / getMax;\n\t\tconst willIdealSquareForHeightFitToWidth = idealSquareForHeight * getMin < paperSize.width;\n\n\t\tconst idealSquareForWidth = paperSize.width / getMin;\n\t\tconst willIdealSquareForWidthFitToWHeight = idealSquareForWidth * getMax < paperSize.height;\n\n\t\tconst roundedHeight = Math.round(idealSquareForHeight * 10) / 10;\n\t\tconst roundedWidth = Math.round(idealSquareForWidth * 10) / 10;\n\n\t\twillIdealSquareForHeightFitToWidth && setSquareSize(roundedHeight);\n\t\twillIdealSquareForWidthFitToWHeight && setSquareSize(roundedWidth);\n\t}, [pixelsHeight, pixelsWidth, paperSize, squareSize]);\n\n\tuseEffect(() => {\n\t\treturnSettings({\n\t\t\theight: pixelsHeight,\n\t\t\twidth: pixelsWidth,\n\t\t\tpaperSize: paperSize,\n\t\t\tmaxColors: maxColors,\n\t\t\tsquareSize: squareSize,\n\t\t});\n\t}, [pixelsHeight, pixelsWidth, paperSize, squareSize, maxColors, returnSettings]);\n\treturn (\n\t\t<div className='settings-column'>\n\t\t\t<div className='section-title'>Color book difficulty</div>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='dimensions'>\n\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t<div className='col-title'></div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname='widthInput'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tvalue={pixelsWidth}\n\t\t\t\t\t\t\tonChange={updateInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='col-title'>WIDTH</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='x'>x</div>\n\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname='heightInput'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tvalue={pixelsHeight}\n\t\t\t\t\t\t\tonChange={updateInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='col-title'>HEIGHT</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tname='pixelizationLevelInput'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tvalue={pixelizationLevel}\n\t\t\t\t\t\tonChange={updateInput}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='col-title'>PIXELIZATION LEVEL</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='section-title'>Paper size</div>\n\t\t\t<div className='row'>\n\t\t\t\t<SelectPaper\n\t\t\t\t\tselected={paperSize}\n\t\t\t\t\toptions={paperSizes}\n\t\t\t\t\treturnSelectedOption={setPaperSize}\n\t\t\t\t/>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<div className='col-title'>SQUARE SIZE</div>\n\t\t\t\t\t<div>{squareSize}</div>\n\t\t\t\t\t<div className='col-title'>MM</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<div className='col-title'>WHITEPSACE</div>\n\t\t\t\t\t<div>TBD</div>\n\t\t\t\t\t<div className='col-title'>MM</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='section-title'>Color Palette Settings</div>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<div className='col-title'>MAX COLORS</div>\n\t\t\t\t\t<input name='maxColors' type='number' onChange={updateInput} value={maxColors} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ImageSettings;\n","import React, { useEffect, useState } from 'react';\nimport './PreviewImage.scss';\n\nconst PreviewImage = ({ imageSrc, fileName, returnImgDimensions, clearImageData }) => {\n\tconst [imageWidth, setImageWidth] = useState(0);\n\tconst [imageHeight, setImageHeight] = useState(0);\n\n\t// Calculate image dimensions\n\tuseEffect(() => {\n\t\tconst img = new Image();\n\t\timg.onload = () => {\n\t\t\tsetImageHeight(img.height);\n\t\t\tsetImageWidth(img.width);\n\n\t\t\treturnImgDimensions({ imageHeight: img.height, imageWidth: img.width });\n\t\t};\n\t\timg.src = imageSrc;\n\t}, [imageSrc, returnImgDimensions]);\n\n\treturn (\n\t\t<div className='preview-image'>\n\t\t\t{imageSrc && (\n\t\t\t\t<div className='image-wrapper'>\n\t\t\t\t\t<img\n\t\t\t\t\t\talt='display'\n\t\t\t\t\t\tsrc={imageSrc}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: imageWidth >= imageHeight ? '60%' : 'auto',\n\t\t\t\t\t\t\theight: imageHeight > imageWidth ? '60%' : 'auto',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className='file-name' onClick={clearImageData}>\n\t\t\t\t{fileName && fileName}\n\t\t\t</div>\n\t\t\t<div className='dimensions'>\n\t\t\t\t{imageWidth && imageHeight && `${imageWidth} x ${imageHeight}`}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PreviewImage;\n","import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nimport uploadImage from '../../../assets/icons/upload-image.svg';\n\nimport './UploadImage.scss';\n\nconst UploadImage = ({ returnImageSrc, returnFileName }) => {\n\t// Recieve files with this callback\n\tconst onDrop = useCallback(\n\t\t(acceptedFiles, fileRejections, event) => {\n\t\t\t// todo handle errors\n\t\t\tif (fileRejections.length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!acceptedFiles.length) return;\n\n\t\t\tconst file = acceptedFiles[0];\n\n\t\t\tconst fileName = file.name;\n\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onload = ({ target: { result } }) => {\n\t\t\t\treturnImageSrc(result);\n\t\t\t\treturnFileName(fileName);\n\t\t\t};\n\t\t\treader.readAsDataURL(file);\n\t\t},\n\t\t[returnImageSrc, returnFileName]\n\t);\n\n\t// Input Hook\n\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({\n\t\tonDrop,\n\t\tmaxFiles: 1,\n\t\tmaxSize: 10 * 1024 * 1024,\n\t});\n\n\treturn (\n\t\t<div className='upload-wrapper'>\n\t\t\t<div\n\t\t\t\t{...getRootProps({\n\t\t\t\t\tclassName: !isDragActive ? 'upload-label' : 'upload-label active',\n\t\t\t\t})}>\n\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t<div className='text-div'>\n\t\t\t\t\t<img alt='upload' src={uploadImage} />\n\n\t\t\t\t\t<div className='bigger'> Drop image here</div>\n\t\t\t\t\t<div className='smaller'>or click here to select it from files</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default UploadImage;\n","// Convert RGB to LAB.\nexport function rgb2lab(rgb) {\n\tlet r = rgb[0] / 255,\n\t\tg = rgb[1] / 255,\n\t\tb = rgb[2] / 255,\n\t\tx,\n\t\ty,\n\t\tz;\n\tr = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n\tg = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n\tb = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\tx = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n\ty = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0;\n\tz = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n\treturn [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n}\n\n/**\n * @param {Array} rgbA array of 3 numbers (rgb)\n * @param {Array} rgbB array of 3 numbers (rgb)\n *\n * Calculates the difference between 2 colors.\n *\n * Returns a number between 0 and 100\n * 0-3 = difference is barely visible to human eye\n * 3-5 = difference is visible when focusing too much\n * 4-10 = difference is noticable but not distrubing\n * 10-15 = difference is noticable\n * 15> = difference is disturbingly noticable\n * 100 = opposite color\n */\nexport function deltaE(rgbA, rgbB) {\n\tlet labA = rgb2lab(rgbA);\n\tlet labB = rgb2lab(rgbB);\n\tlet deltaL = labA[0] - labB[0];\n\tlet deltaA = labA[1] - labB[1];\n\tlet deltaB = labA[2] - labB[2];\n\tlet c1 = Math.sqrt(labA[1] * labA[1] + labA[2] * labA[2]);\n\tlet c2 = Math.sqrt(labB[1] * labB[1] + labB[2] * labB[2]);\n\tlet deltaC = c1 - c2;\n\tlet deltaH = deltaA * deltaA + deltaB * deltaB - deltaC * deltaC;\n\tdeltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\n\tlet sc = 1.0 + 0.045 * c1;\n\tlet sh = 1.0 + 0.015 * c1;\n\tlet deltaLKlsl = deltaL / 1.0;\n\tlet deltaCkcsc = deltaC / sc;\n\tlet deltaHkhsh = deltaH / sh;\n\tlet i = deltaLKlsl * deltaLKlsl + deltaCkcsc * deltaCkcsc + deltaHkhsh * deltaHkhsh;\n\treturn i < 0 ? 0 : Math.sqrt(i);\n}\n","import React, { useState, useCallback } from 'react';\nimport ImageSettings from './ImageSettings/ImageSettings';\nimport PreviewImage from './PreviewImage/PreviewImage';\nimport UploadImage from './UploadImage/UploadImage';\nimport './ImageSelectionAndSettings.scss';\nimport quantize from 'quantize';\nimport { createPixelArray } from '../../utils/createPixelArray';\nimport { deltaE } from '../../utils/deltaE';\nimport allRalColors from '../../assets/data/palette.json';\n\nconst ImageSelectionAndSettings = ({ saveData }) => {\n\tconst [imageSrc, setImageSrc] = useState(null);\n\tconst [fileName, setFileName] = useState(null);\n\tconst [imageDimensions, setImageDimensions] = useState({});\n\tconst [settings, setSettings] = useState({});\n\n\tconst clearImageData = useCallback(() => {\n\t\tsetImageSrc(null);\n\t}, []);\n\n\tconst buttonClick = useCallback(() => {\n\t\tif (\n\t\t\tsettings &&\n\t\t\tsettings.width &&\n\t\t\tsettings.height &&\n\t\t\tsettings.maxColors &&\n\t\t\tsettings.squareSize &&\n\t\t\timageSrc\n\t\t) {\n\t\t\tconst { width, height, maxColors, squareSize } = settings;\n\t\t\tlet img = new Image();\n\t\t\timg.crossOrigin = 'anonymous';\n\t\t\timg.onload = () => {\n\t\t\t\t// Round dimensions to the nearest integers for accurate result.\n\t\t\t\tconst roundedHeight = Math.round(height);\n\t\t\t\tconst roundedWidth = Math.round(width);\n\n\t\t\t\tconst canvas = document.createElement('canvas');\n\n\t\t\t\t// Setup canvas dimensions.\n\t\t\t\tcanvas.width = roundedWidth;\n\t\t\t\tcanvas.height = roundedHeight;\n\n\t\t\t\t// Draw image to the canvas in the size of the rounded width.\n\t\t\t\tconst canvasContext = canvas.getContext('2d');\n\t\t\t\tcanvasContext.drawImage(img, 0, 0, roundedWidth, roundedHeight);\n\n\t\t\t\t// Get drawn image data.\n\t\t\t\tconst imageData = canvasContext.getImageData(0, 0, roundedWidth, roundedHeight);\n\t\t\t\tconst imagePixels = imageData.data;\n\t\t\t\tconst imagePixelCount = roundedWidth * roundedHeight;\n\n\t\t\t\t// Create pixls array of the whole image.\n\t\t\t\tconst pixelArray = createPixelArray(imagePixels, imagePixelCount);\n\n\t\t\t\t// Get map of quantized colors.\n\t\t\t\tconst cmap = quantize(pixelArray, maxColors);\n\t\t\t\tconst quantizedPalette = cmap.palette();\n\n\t\t\t\t// Generated Ral Palette\n\t\t\t\tconst ralPalette = [];\n\t\t\t\tquantizedPalette.forEach(qColor => {\n\t\t\t\t\t// Find the closest ral color for this quantized color.\n\t\t\t\t\tconst { ralColor } = allRalColors.reduce((bestColor, rColor) => {\n\t\t\t\t\t\tconst rColorObj = {\n\t\t\t\t\t\t\tdeltaE: deltaE(qColor, rColor.rgb.split(',')),\n\t\t\t\t\t\t\tralColor: rColor,\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn bestColor &&\n\t\t\t\t\t\t\tMath.min(bestColor.deltaE, rColorObj.deltaE) === bestColor.deltaE\n\t\t\t\t\t\t\t? bestColor\n\t\t\t\t\t\t\t: rColorObj || rColorObj;\n\t\t\t\t\t});\n\n\t\t\t\t\t// Find duplicated color in ral\n\t\t\t\t\tconst duplicatedRal = ralPalette.find(\n\t\t\t\t\t\tpaletteObj => paletteObj.ral.ral === ralColor.ral\n\t\t\t\t\t);\n\n\t\t\t\t\t// If there is not an element already inside the palette, add it.\n\t\t\t\t\tif (!duplicatedRal) {\n\t\t\t\t\t\tralPalette.push({\n\t\t\t\t\t\t\toriginal: qColor.join(','),\n\t\t\t\t\t\t\tral: ralColor,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// There is already an element here, meaning we have a different RGB value. So we replace the string with array of two strings.\n\t\t\t\t\t\tconst newArray =\n\t\t\t\t\t\t\ttypeof duplicatedRal.original === 'string'\n\t\t\t\t\t\t\t\t? [duplicatedRal.original, qColor.join(',')]\n\t\t\t\t\t\t\t\t: [...duplicatedRal.original, qColor.join(',')];\n\t\t\t\t\t\tralPalette.splice(ralPalette.indexOf(duplicatedRal), 1, {\n\t\t\t\t\t\t\toriginal: newArray,\n\t\t\t\t\t\t\tral: ralColor,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Find all the pixels's nearest quantized colors.\n\t\t\t\tconst generatedPalette = [];\n\t\t\t\tpixelArray.forEach(pixel => {\n\t\t\t\t\tgeneratedPalette.push(cmap.map(pixel));\n\t\t\t\t});\n\n\t\t\t\t// Transform the generatedPalette of pixels into array of arrays for easier rendering.\n\t\t\t\tlet i = 0;\n\t\t\t\tconst mappedArray = [];\n\t\t\t\twhile (generatedPalette.length) {\n\t\t\t\t\tmappedArray.push({\n\t\t\t\t\t\trow: i,\n\t\t\t\t\t\tcolumns: generatedPalette.splice(0, roundedWidth),\n\t\t\t\t\t});\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tsaveData({\n\t\t\t\t\tfileName: fileName,\n\t\t\t\t\tsquareSize: squareSize,\n\t\t\t\t\tpalette: ralPalette,\n\t\t\t\t\tpixels: mappedArray,\n\t\t\t\t});\n\t\t\t\timg = null;\n\t\t\t};\n\t\t\timg.src = imageSrc;\n\t\t}\n\t}, [imageSrc, fileName, settings, saveData]);\n\n\treturn (\n\t\t<>\n\t\t\t<div className='img-upload-title '>Image upload and settings</div>\n\t\t\t<div className='img-settings-and-upload-wrapper'>\n\t\t\t\t{(!imageSrc && (\n\t\t\t\t\t<UploadImage returnImageSrc={setImageSrc} returnFileName={setFileName} />\n\t\t\t\t)) || (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ImageSettings imageDimensions={imageDimensions} returnSettings={setSettings} />\n\t\t\t\t\t\t<PreviewImage\n\t\t\t\t\t\t\timageSrc={imageSrc}\n\t\t\t\t\t\t\tfileName={fileName}\n\t\t\t\t\t\t\treturnImgDimensions={setImageDimensions}\n\t\t\t\t\t\t\tclearImageData={clearImageData}\n\t\t\t\t\t\t\treturnSettings={setSettings}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className='img-settings-generate-button'>\n\t\t\t\t<button onClick={buttonClick}>Generate Pixels</button>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ImageSelectionAndSettings;\n","export const createPixelArray = (imgData, pixelCount) => {\n\tconst pixels = imgData;\n\tconst pixelArray = [];\n\tfor (let i = 0, offset, r, g, b; i < pixelCount; i++) {\n\t\toffset = i * 4;\n\t\tr = pixels[offset + 0];\n\t\tg = pixels[offset + 1];\n\t\tb = pixels[offset + 2];\n\n\t\tpixelArray.push([r, g, b, 255]);\n\t}\n\treturn pixelArray;\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ToggleColor = ({ toggle, updateToggle }) => (\n\t<ToggleButton toggled={toggle}>\n\t\t<div className='toggler' onClick={() => updateToggle(!toggle)}>\n\t\t\t<div className='switch' />\n\t\t\t<div className='txt'>\n\t\t\t\t<span className={toggle ? 'blue' : 'white'}>EMPTY</span>\n\t\t\t\t<span className={toggle ? 'white' : 'blue'}>FILLED</span>\n\t\t\t</div>\n\t\t</div>\n\t</ToggleButton>\n);\n\nexport default ToggleColor;\n\nconst ToggleButton = styled.div`\n\tposition: relative;\n\theight: 100%;\n\twidth: 100%;\n\n\t.toggler {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\twidth: 150px;\n\t\theight: 45px;\n\t\tcursor: pointer;\n\t\tborder: 1px solid #204051;\n\t\tborder-radius: 5px;\n\t}\n\n\t.switch {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\twidth: 50%;\n\t\theight: 100%;\n\t\tbackground: #204051;\n\t\ttransition: 0.2s;\n\t\ttransform: ${props => (props.toggled ? 'translateX(100%)' : '')};\n\t\tborder-radius: ${props => (props.toggled ? '0 5px 5px 0 ' : '5px 0 0 5px')};\n\t}\n\n\t.txt {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: transparent;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\n\t\tspan {\n\t\t\ttext-align: center;\n\t\t\tpadding: 10px;\n\t\t}\n\t}\n\n\t.white {\n\t\tcolor: #e4e3e3;\n\t\ttransition: color 0.2s;\n\t\tfont-weight: bold;\n\t}\n\n\t.blue {\n\t\ttransition: color 0.2s;\n\t\tcolor: #204051;\n\t}\n`;\n","import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Colorbook = ({ palette, pixels, squareSize, shouldColor, sendRef }) => {\n\tconst colorbookRef = useRef(null);\n\n\tconst createBorder = isSideEqual => `0.2px solid ${isSideEqual ? '#FFFFFF' : '#5D5D5D'}`;\n\tconst isSameSquarePalette = (box, original) => {\n\t\tif (!original || !box) return false;\n\t\tif (typeof original === 'string') {\n\t\t\treturn original === box;\n\t\t} else if (Array.isArray(original)) {\n\t\t\treturn original.includes(box);\n\t\t} else return false;\n\t};\n\n\tuseEffect(() => {\n\t\tsendRef(colorbookRef);\n\t}, [colorbookRef, sendRef]);\n\n\treturn (\n\t\t<ColorbookContainer>\n\t\t\t<div ref={colorbookRef} className='colorbook'>\n\t\t\t\t{(squareSize &&\n\t\t\t\t\tpalette &&\n\t\t\t\t\tpixels &&\n\t\t\t\t\tpixels.map((row, index, arr) => {\n\t\t\t\t\t\tconst prevRow = (index !== 0 && pixels[index - 1]) || null;\n\t\t\t\t\t\tconst nextRow = (index + 1 !== arr.length && pixels[index + 1]) || null;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\tkey={row.row}\n\t\t\t\t\t\t\t\trowWidth={`${row.columns.length * squareSize}mm`}\n\t\t\t\t\t\t\t\trowHeight={`${squareSize}mm`}>\n\t\t\t\t\t\t\t\t{row.columns.map((column, index, arr) => {\n\t\t\t\t\t\t\t\t\tconst { top, bottom, left, right, center } = {\n\t\t\t\t\t\t\t\t\t\tcenter: column.join(','),\n\t\t\t\t\t\t\t\t\t\ttop: prevRow && prevRow.columns[index].join(','),\n\t\t\t\t\t\t\t\t\t\tbottom: nextRow && nextRow.columns[index].join(','),\n\t\t\t\t\t\t\t\t\t\tleft: (index !== 0 && row.columns[index - 1].join(',')) || null,\n\t\t\t\t\t\t\t\t\t\tright:\n\t\t\t\t\t\t\t\t\t\t\t(index + 1 !== arr.length && row.columns[index + 1].join(',')) ||\n\t\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tconst columnData =\n\t\t\t\t\t\t\t\t\t\t(palette &&\n\t\t\t\t\t\t\t\t\t\t\tpalette.length > 0 &&\n\t\t\t\t\t\t\t\t\t\t\tpalette.find(color => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!Array.isArray(color.original)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn color.original === center;\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn color.original.includes(center);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t})) ||\n\t\t\t\t\t\t\t\t\t\tnull;\n\n\t\t\t\t\t\t\t\t\tconst isTopEq =\n\t\t\t\t\t\t\t\t\t\tcolumnData && isSameSquarePalette(top, columnData.original);\n\t\t\t\t\t\t\t\t\tconst isBotEq =\n\t\t\t\t\t\t\t\t\t\tcolumnData && isSameSquarePalette(bottom, columnData.original);\n\t\t\t\t\t\t\t\t\tconst isRightEq =\n\t\t\t\t\t\t\t\t\t\tcolumnData && isSameSquarePalette(right, columnData.original);\n\t\t\t\t\t\t\t\t\tconst isLeftEq =\n\t\t\t\t\t\t\t\t\t\tcolumnData && isSameSquarePalette(left, columnData.original);\n\n\t\t\t\t\t\t\t\t\tconst allBoxesAreEqual = isTopEq && isRightEq && isLeftEq && isBotEq;\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\tkey={column + index}\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor={\n\t\t\t\t\t\t\t\t\t\t\t\tshouldColor\n\t\t\t\t\t\t\t\t\t\t\t\t\t? columnData &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t  columnData.ral &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t  columnData.ral.rgb &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t  `rgb(${columnData.ral.rgb})`\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'white'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tfontSize={`${squareSize * 2}px`}\n\t\t\t\t\t\t\t\t\t\t\tborder={{\n\t\t\t\t\t\t\t\t\t\t\t\ttop: !shouldColor && createBorder(isTopEq),\n\t\t\t\t\t\t\t\t\t\t\t\tright: !shouldColor && createBorder(isRightEq),\n\t\t\t\t\t\t\t\t\t\t\t\tbottom: !shouldColor && createBorder(isBotEq),\n\t\t\t\t\t\t\t\t\t\t\t\tleft: !shouldColor && createBorder(isLeftEq),\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t{!shouldColor &&\n\t\t\t\t\t\t\t\t\t\t\t\t!allBoxesAreEqual &&\n\t\t\t\t\t\t\t\t\t\t\t\tcolumnData &&\n\t\t\t\t\t\t\t\t\t\t\t\tcolumnData.ral &&\n\t\t\t\t\t\t\t\t\t\t\t\tcolumnData.ral.code}\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t);\n\t\t\t\t\t})) || <div>Empty data</div>}\n\t\t\t</div>\n\t\t</ColorbookContainer>\n\t);\n};\n\nconst Row = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: ${props => props.rowWidth};\n\theight: ${props => props.rowHeight};\n`;\n\nconst Box = styled.div`\n\tdisplay: inline-block;\n\tflex-grow: 1;\n\theight: 100%;\n\twidth: 100%;\n\toverflow: hidden;\n\twhite-space: none;\n\ttext-align: center;\n\tcolor: ${props => props.textColor};\n\tfont-size: ${props => props.fontSize};\n\tbackground-color: ${props => props.backgroundColor};\n\tborder-top: ${props => props.border.top};\n\tborder-right: ${props => props.border.right};\n\tborder-bottom: ${props => props.border.bottom};\n\tborder-left: ${props => props.border.left};\n`;\n\nconst ColorbookContainer = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\toverflow: auto;\n\tposition: relative;\n\t.colorbook {\n\t\tposition: absolute;\n\t\tborder: 2px solid black;\n\t}\n`;\n\nexport default Colorbook;\n","import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst PaletteDiv = styled.div`\n\tdisplay: grid;\n\twidth: 100%;\n\theight: 100%;\n\tgrid-template-columns: 1fr 1fr;\n\tgrid-auto-rows: 100px;\n\tgrid-gap: 10px;\n\toverflow: auto;\n`;\n\nconst ColorDiv = styled.div`\n\tdisplay: flex;\n\theight: 100%;\n\n\t.square {\n\t\twidth: 50px;\n\t\tbackground-color: ${props => props.color};\n\t\tcolor: ${props => props.codeColor};\n\t\ttext-align: center;\n\t\talign-content: center;\n\t\tfont-size: 22px;\n\t\tfont-weight: bold;\n\t\tposition: relative;\n\n\t\tdiv {\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\tleft: 50%;\n\t\t\ttransform: translate(-50%, -50%) rotate(90deg);\n\t\t}\n\t}\n\n\t.info {\n\t\twidth: 100%;\n\t\tmargin: auto;\n\t\theight: 78px;\n\t\tpadding: 10px;\n\t\tbackground: #fff;\n\t\tborder: 1px solid gray;\n\t\t.code {\n\t\t\tfont-size: 22px;\n\t\t\tfont-weight: bold;\n\t\t}\n\n\t\t.name {\n\t\t\tfont-size: 18px;\n\t\t}\n\t}\n`;\n\nconst Palette = ({ palette, sendRef }) => {\n\tconst [sortedPalette, setSortedPalette] = useState([]);\n\tconst paletteRef = useRef(null);\n\tuseEffect(() => {\n\t\tsetSortedPalette(\n\t\t\t(palette &&\n\t\t\t\tpalette.sort((colA, colB) => {\n\t\t\t\t\tconst ralCodeA = colA.ral.ral.split(' ')[1];\n\t\t\t\t\tconst ralCodeB = colB.ral.ral.split(' ')[1];\n\t\t\t\t\treturn ralCodeA - ralCodeB;\n\t\t\t\t})) ||\n\t\t\t\t[]\n\t\t);\n\t}, [palette]);\n\n\tuseEffect(() => {\n\t\tsendRef(paletteRef);\n\t}, [sendRef, paletteRef]);\n\n\treturn (\n\t\t<PaletteDiv ref={paletteRef}>\n\t\t\t{sortedPalette.length > 0 &&\n\t\t\t\tsortedPalette.map(color => (\n\t\t\t\t\t<Color\n\t\t\t\t\t\tkey={color.ral.code}\n\t\t\t\t\t\tral={color.ral.ral}\n\t\t\t\t\t\tcode={color.ral.code}\n\t\t\t\t\t\tname={color.ral.name}\n\t\t\t\t\t\trgb={color.ral.rgb}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t</PaletteDiv>\n\t);\n};\n\nexport default Palette;\n\nconst Color = ({ ral, code, name, rgb }) => {\n\tconst rgbArray = rgb.split(',');\n\tconst textColor =\n\t\t0.213 * rgbArray[0] + 0.715 * rgbArray[1] + 0.072 * rgbArray[2] < 125 ? '#fff' : '$000';\n\treturn (\n\t\t<ColorDiv color={`rgb(${rgb})`} codeColor={textColor}>\n\t\t\t<div className='square'>\n\t\t\t\t<div>{code}</div>\n\t\t\t</div>\n\t\t\t<div className='info'>\n\t\t\t\t<div className='code'>{name}</div>\n\t\t\t\t<div className='name'>{ral}</div>\n\t\t\t</div>\n\t\t</ColorDiv>\n\t);\n};\n","import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport domtoimage from 'dom-to-image-more';\n\nconst DownlaodImage = ({ fileName, colorbookRef, paletteRef }) => {\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst setDownloadStart = useCallback(async () => {\n\t\tconst slicedFileName = fileName.split('.').slice(0, -1).join('.');\n\t\tsetIsLoading(true);\n\t\tif (slicedFileName && colorbookRef && paletteRef) {\n\t\t\tconst colorbookDataURL = await domtoimage.toJpeg(colorbookRef.current);\n\t\t\tconst link = document.createElement('a');\n\t\t\tlink.download = `${slicedFileName}-colorbook.jpeg`;\n\t\t\tlink.href = colorbookDataURL;\n\t\t\tlink.click();\n\n\t\t\tconst paletteDataURL = await domtoimage.toJpeg(paletteRef.current, { bgcolor: '#ffffff' });\n\t\t\tconst palLink = document.createElement('a');\n\t\t\tpalLink.download = `${slicedFileName}-palette.jpeg`;\n\t\t\tpalLink.href = paletteDataURL;\n\t\t\tpalLink.click();\n\n\t\t\tsetIsLoading(false);\n\t\t} else {\n\t\t\tsetIsLoading(false);\n\t\t}\n\t}, [fileName, colorbookRef, paletteRef]);\n\n\treturn (\n\t\t<ButtonWrapper>\n\t\t\t<button onClick={() => setDownloadStart()}>\n\t\t\t\t{isLoading ? 'Loading' : 'Download JPG'}\n\t\t\t</button>\n\t\t</ButtonWrapper>\n\t);\n};\n\nexport default DownlaodImage;\n\nconst ButtonWrapper = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n\tdisplay: flex;\n\tjustify-content: center;\n\tbutton {\n\t\tdisplay: block;\n\t\twidth: 300px;\n\t\theight: 70px;\n\t\tmargin: auto;\n\t\tbackground-color: #3b6978;\n\t\tcolor: #e4e3e3;\n\t\tfont-size: 20px;\n\t\ttext-transform: uppercase;\n\t\tborder: none;\n\t\tborder-radius: 18px;\n\t\toutline: none;\n\t\tcursor: pointer;\n\t\tbox-shadow: 0px 0px 10px 1px rgba(0, 0, 0, 0.75);\n\t\ttransition: 0.1s;\n\n\t\t:active {\n\t\t\toutline: none;\n\t\t}\n\t}\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport ToggleColor from './ToggleColor';\nimport Colorbook from './Colorbook';\nimport Palette from './Palette';\nimport DownloadImage from './DownloadImage';\n\nconst GeneratedColorbookAndPalette = ({ palette, pixels, squareSize, fileName }) => {\n\tconst [colorbookRef, setColorbookRef] = useState(null);\n\tconst [paletteRef, setPaletteRef] = useState(null);\n\tconst [shouldColor, setShouldColor] = useState(false);\n\treturn (\n\t\t<Grid>\n\t\t\t<div className='section-title'>Generated Palette and Colorbook</div>\n\t\t\t<div className='color-count'>\n\t\t\t\t<div>Colors generated: {palette.length}</div>\n\t\t\t</div>\n\t\t\t<div className='toggle-switch'>\n\t\t\t\t<ToggleColor toggle={shouldColor} updateToggle={e => setShouldColor(e)} />\n\t\t\t</div>\n\t\t\t<div className='palette'>\n\t\t\t\t<Palette palette={palette} sendRef={ref => setPaletteRef(ref)} />\n\t\t\t</div>\n\t\t\t<div className='colorbook'>\n\t\t\t\t<Colorbook\n\t\t\t\t\tsendRef={ref => setColorbookRef(ref)}\n\t\t\t\t\tpalette={palette}\n\t\t\t\t\tpixels={pixels}\n\t\t\t\t\tsquareSize={squareSize}\n\t\t\t\t\tshouldColor={shouldColor}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='download'>\n\t\t\t\t<DownloadImage\n\t\t\t\t\tfileName={fileName}\n\t\t\t\t\tcolorbookRef={colorbookRef}\n\t\t\t\t\tpaletteRef={paletteRef}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Grid>\n\t);\n};\n\nexport default GeneratedColorbookAndPalette;\n\nconst Grid = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: grid;\n\tcolumn-gap: 20px;\n\tgrid-template-rows: 70px 70px 700px 150px;\n\tgrid-template-columns: 1fr 1fr;\n\n\t.section-title {\n\t\tgrid-column: 1 / 3;\n\t\tgrid-row: 1;\n\t\ttext-align: center;\n\t}\n\n\t.color-count {\n\t\tgrid-column: 1 / 2;\n\t\tgrid-row: 2;\n\t\tposition: relative;\n\t\tdiv {\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\ttransform: translateY(-50%);\n\t\t\tfont-size: 22px;\n\t\t\tcolor: #204051;\n\t\t}\n\t}\n\n\t.toggle-switch {\n\t\tgrid-column: 2 / 3;\n\t\tgrid-row: 2;\n\t}\n\t.palette {\n\t\tgrid-column: 1 / 2;\n\t\tgrid-row: 3;\n\t}\n\t.colorbook {\n\t\tgrid-column: 2 / 3;\n\t\tgrid-row: 3;\n\t\tbox-shadow: inset 0 0 10px #000000;\n\t}\n\t.download {\n\t\tgrid-column: 1 / 3;\n\t\tgrid-row: 4;\n\t}\n`;\n","import React, { useState } from 'react';\nimport './sass/global.scss';\nimport { Card, Divider } from './components-UI';\nimport {\n\tInstructions,\n\tImageSelectionAndSettings,\n\tGeneratedPaletteAndColorBook,\n} from './components';\nfunction App() {\n\tconst [data, setData] = useState(null);\n\treturn (\n\t\t<div className='body-background'>\n\t\t\t<Card>\n\t\t\t\t<h1 className='title'>Create pixel art from any image</h1>\n\t\t\t\t<Instructions></Instructions>\n\t\t\t\t<Divider />\n\t\t\t\t<ImageSelectionAndSettings saveData={setData} />\n\t\t\t\t<Divider />\n\t\t\t\t{data && (\n\t\t\t\t\t<GeneratedPaletteAndColorBook\n\t\t\t\t\t\tpalette={data.palette}\n\t\t\t\t\t\tpixels={data.pixels}\n\t\t\t\t\t\tsquareSize={data.squareSize}\n\t\t\t\t\t\tfileName={data.fileName}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}